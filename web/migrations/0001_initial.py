# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-03-21 01:27
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import web.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='user',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('address', models.CharField(blank=True, max_length=255)),
                ('mobile_number', models.CharField(blank=True, max_length=255, validators=[django.core.validators.RegexValidator('^[0-9+]*$', 'Must be numbers only')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', web.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Help',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Help')),
                ('description', models.CharField(max_length=255, verbose_name='Description')),
                ('content', models.TextField()),
            ],
            options={
                'verbose_name': 'Help',
            },
        ),
        migrations.CreateModel(
            name='JobFeed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_name', models.CharField(max_length=255, verbose_name='Job Name')),
                ('job_name_slug', models.SlugField(max_length=30, unique=True, verbose_name='Job Name Slug')),
                ('job_description', models.TextField(verbose_name='Job Description')),
                ('industry', models.IntegerField(choices=[(0, 'Software'), (1, 'Accounting'), (2, 'HealthCare')], default=0, verbose_name='Industry Type')),
                ('company_type', models.IntegerField(choices=[(0, 'StartUp'), (1, 'National'), (2, 'MNCs')], verbose_name='Company Type')),
                ('location', models.CharField(max_length=255, verbose_name='Location')),
                ('function', models.CharField(max_length=255, verbose_name='Job Function')),
                ('experience', models.IntegerField(choices=[(0, 'Fresher'), (1, 'Intern'), (2, 'Experienced'), (3, 'Trainee')], verbose_name='Experience Level')),
                ('salary', models.CharField(max_length=255, verbose_name='Job Salary')),
                ('job_type', models.IntegerField(choices=[(0, 'Part Time'), (1, 'Full Time')], verbose_name='Join Type')),
                ('duration', models.IntegerField(choices=[(0, '7 Days'), (1, '15 Days'), (2, '1 Month')], verbose_name='Job Duration')),
                ('queue', models.PositiveIntegerField(default=1)),
            ],
            options={
                'verbose_name': 'Job Feed',
                'verbose_name_plural': 'Job Feeds',
            },
        ),
        migrations.CreateModel(
            name='ProfileType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_type', models.CharField(choices=[('JobSeeker', 'JobSeeker'), ('Employer', 'Employer')], max_length=122)),
                ('acc_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profile_type', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Profile Type',
            },
        ),
        migrations.CreateModel(
            name='QuestionAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=255, verbose_name='Question')),
                ('answer', models.TextField()),
                ('qa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questionAnswer', to='web.Help')),
            ],
            options={
                'verbose_name': 'Question & Answer',
                'verbose_name_plural': 'Questions & Answers',
            },
        ),
    ]
