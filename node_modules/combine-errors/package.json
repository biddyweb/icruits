{
  "_args": [
    [
      {
        "raw": "combine-errors@^3.0.3",
        "scope": null,
        "escapedName": "combine-errors",
        "name": "combine-errors",
        "rawSpec": "^3.0.3",
        "spec": ">=3.0.3 <4.0.0",
        "type": "range"
      },
      "/home/einjel/Desktop/iCruits/websource/node_modules/html-snapshots"
    ]
  ],
  "_from": "combine-errors@>=3.0.3 <4.0.0",
  "_id": "combine-errors@3.0.3",
  "_inCache": true,
  "_location": "/combine-errors",
  "_nodeVersion": "6.1.0",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/combine-errors-3.0.3.tgz_1467104228986_0.0929112455341965"
  },
  "_npmUser": {
    "name": "mattmueller",
    "email": "mattmuelle@gmail.com"
  },
  "_npmVersion": "2.15.6",
  "_phantomChildren": {},
  "_requested": {
    "raw": "combine-errors@^3.0.3",
    "scope": null,
    "escapedName": "combine-errors",
    "name": "combine-errors",
    "rawSpec": "^3.0.3",
    "spec": ">=3.0.3 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/html-snapshots"
  ],
  "_resolved": "https://registry.npmjs.org/combine-errors/-/combine-errors-3.0.3.tgz",
  "_shasum": "f4df6740083e5703a3181110c2b10551f003da86",
  "_shrinkwrap": null,
  "_spec": "combine-errors@^3.0.3",
  "_where": "/home/einjel/Desktop/iCruits/websource/node_modules/html-snapshots",
  "author": {
    "name": "Matthew Mueller",
    "email": "mattmuelle@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/MatthewMueller/combine-errors/issues"
  },
  "dependencies": {
    "custom-error-instance": "2.1.1",
    "lodash.uniqby": "4.5.0"
  },
  "description": "Combine errors into one",
  "devDependencies": {
    "mocha": "2.4.5"
  },
  "directories": {},
  "dist": {
    "shasum": "f4df6740083e5703a3181110c2b10551f003da86",
    "tarball": "https://registry.npmjs.org/combine-errors/-/combine-errors-3.0.3.tgz"
  },
  "gitHead": "4f67e3d6b0ed9d6795e703a0f31077639e6a75bb",
  "homepage": "https://github.com/MatthewMueller/combine-errors#readme",
  "keywords": [
    "combine",
    "errors",
    "compose",
    "error",
    "handling"
  ],
  "main": "index",
  "maintainers": [
    {
      "name": "mattmueller",
      "email": "mattmuelle@gmail.com"
    }
  ],
  "name": "combine-errors",
  "optionalDependencies": {},
  "readme": "\n# combine-errors\n\n  Simple, dependency-free way to combine multiple errors into one.\n\n  This is useful for handling multiple asynchronous errors, where you want to catch all the errors and combine them to return just a single error.\n\n## Features\n\n- `error instanceof Error === true`\n- composable: `error([error([err1, err2]), err3])`\n- stack and message are combined in a nice way\n- array-like object, so you can access the original errors by looping over the error\n- If you just have one error, it looks exactly like raw error meaning, `error(err).message === err.message && error(err).stack === err.stack`\n- zero dependencies\n- should work in the browser, though I haven't tested it yet\n\n## Installation\n\n```\nnpm install combine-errors\n```\n\n## Usage\n\n```js\nvar error = require('combine-errors')\nvar err = error([\n  new Error('boom'),\n  new Error('kablam')\n])\nthrow err\n/*\n=>\nError: boom\n    at repl:2:1\n    at REPLServer.defaultEval (repl.js:262:27)\n    at bound (domain.js:287:14)\n    at REPLServer.runBound [as eval] (domain.js:300:12)\n    at REPLServer.<anonymous> (repl.js:431:12)\n    at emitOne (events.js:95:20)\n    at REPLServer.emit (events.js:182:7)\n    at REPLServer.Interface._onLine (readline.js:211:10)\n    at REPLServer.Interface._line (readline.js:550:8)\n    at REPLServer.Interface._ttyWrite (readline.js:827:14)\n\nError: kablam\n    at repl:3:1\n    at REPLServer.defaultEval (repl.js:262:27)\n    at bound (domain.js:287:14)\n    at REPLServer.runBound [as eval] (domain.js:300:12)\n    at REPLServer.<anonymous> (repl.js:431:12)\n    at emitOne (events.js:95:20)\n    at REPLServer.emit (events.js:182:7)\n    at REPLServer.Interface._onLine (readline.js:211:10)\n    at REPLServer.Interface._line (readline.js:550:8)\n    at REPLServer.Interface._ttyWrite (readline.js:827:14)\n*/\n```\n\n## License\n\nMIT\n",
  "readmeFilename": "Readme.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/MatthewMueller/combine-errors.git"
  },
  "scripts": {},
  "version": "3.0.3"
}
